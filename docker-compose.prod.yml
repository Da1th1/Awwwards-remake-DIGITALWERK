services:
  db:
    image: postgres:15-alpine
    container_name: digitalwerk_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-strapi}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-strapi}
      POSTGRES_DB: ${DB_NAME:-strapi}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-strapi} -d ${DB_NAME:-strapi}"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    networks:
      - digitalwerk_network

  strapi:
    platform: linux/amd64
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: digitalwerk_strapi
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      HOST: 0.0.0.0
      PORT: 1337
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_CLIENT: postgres
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_NAME: ${DB_NAME:-strapi}
      DATABASE_USERNAME: ${DB_USER:-strapi}
      DATABASE_PASSWORD: ${DB_PASSWORD:-strapi}
      DATABASE_SSL: ${DATABASE_SSL:-false}
    volumes:
      - "../files/strapi-public:/app/public"
      - "../files/strapi-uploads:/app/uploads"
    ports:
      - "1337:1337"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:1337/_health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    networks:
      - digitalwerk_network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: digitalwerk_frontend
    depends_on:
      strapi:
        condition: service_started
    ports:
      - "80:80"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    networks:
      - digitalwerk_network

volumes:
  db_data:

networks:
  digitalwerk_network:
    driver: bridge
